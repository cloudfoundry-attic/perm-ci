resource_types:
- name: gcs
  type: docker-image
  source:
    repository: frodenas/gcs-resource

resources:
- name: perm-ci
  type: git
  source:
    uri: git@github.com:cloudfoundry-incubator/perm-ci
    branch: master
    private_key: ((github.private_key))

- name: bbl-cryptdo-image-src
  type: git
  source:
    uri: git@github.com:cloudfoundry-incubator/perm-ci
    private_key: ((github.private_key))
    branch: master
    paths:
    - images/bbl-cryptdo/*

- name: bbl-cryptdo-image
  type: docker-image
  source:
    repository: cfperm/bbl-cryptdo
    username: ((dockerhub.username))
    password: ((dockerhub.password))

- name: bbl-version
  type: github-release
  source:
    owner: cloudfoundry
    repository: bosh-bootloader
    access_token: ((github.access_token))

- name: bosh-cli-version
  type: github-release
  source:
    owner: cloudfoundry
    repository: bosh-cli
    access_token: ((github.access_token))

- name: cryptdo-version
  type: github-release
  source:
    owner: xoebus
    repository: cryptdo
    access_token: ((github.access_token))

- name: perm-alpha
  type: gcs
  source:
    bucket: perm-alphas
    regexp: perm-(\d+\.\d+\.\d+.*).tgz
    json_key: ((gcp.json_key))

- name: perm-image-alpha
  type: docker-image
  source:
    repository: cfperm/perm
    tag: alpha
    username: ((dockerhub.username))
    password: ((dockerhub.password))

- name: perm-image-src
  type: git
  source:
    uri: git@github.com:cloudfoundry-incubator/perm-ci
    private_key: ((github.private_key))
    branch: master
    paths:
    - images/perm/*

jobs:
- name: build-perm-image-alpha
  plan:
  - aggregate:
    - get: perm-bin-dir
      resource: perm-alpha
      trigger: true
    - get: perm-image-src
    - get: perm-ci
  - task: create-perm-image-workspace
    file: perm-ci/tasks/create-perm-image-workspace/task.yml
  - put: perm-image-alpha
    params:
      build: perm-image-workspace

- name: build-bbl-cryptdo-image
  plan:
  - aggregate:
    - get: bbl-cryptdo-image-src
      trigger: true
    - get: bbl-version
      trigger: true
    - get: bosh-cli-version
      trigger: true
    - get: cryptdo-version
      trigger: true
  - task: write-build-args-json
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: alpine
      inputs:
      - name: bbl-version
      - name: bosh-cli-version
      - name: cryptdo-version
      outputs:
      - name: build-args-dir
      run:
        path: sh
        args:
        - -c
        - |
          export BBL_VERSION="$(cat bbl-version/tag)" && \
          export BOSH_CLI_VERSION="$(cat bosh-cli-version/tag | sed -e "s/v//")" && \
          export CRYPTDO_VERSION="$(cat cryptdo-version/tag | sed -e "s/v//")" && \
          mkdir -p build-args-dir && \
          echo "{\"BBL_VERSION\":\"${BBL_VERSION}\",\"BOSH_CLI_VERSION\":\"${BOSH_CLI_VERSION}\",\"CRYPTDO_VERSION\":\"${CRYPTDO_VERSION}\"}" > \
          build-args-dir/build-args.json
  - put: bbl-cryptdo-image
    params:
      build: bbl-cryptdo-image-src/images/bbl-cryptdo
      build_args_file: build-args-dir/build-args.json
