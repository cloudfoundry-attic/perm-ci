resource_types:
- name: gcs
  type: docker-image
  source:
    repository: frodenas/gcs-resource

resources:
- name: perm-ci
  type: git
  source:
    uri: git@github.com:cloudfoundry-incubator/perm-ci
    branch: master
    private_key: ((github.private_key))

- name: golang-image
  type: docker-image
  source:
    repository: golang
    username: ((dockerhub.username))
    password: ((dockerhub.password))

- name: perm-requirements-src-base
  type: git
  source:
    uri: git@github.com:cloudfoundry-incubator/perm-ci
    private_key: ((github.private_key))
    branch: master
    paths:
    - images/perm-requirements/base/*

- name: perm-requirements-image-base
  type: docker-image
  source:
    repository: cfperm/requirements
    tag: base
    username: ((dockerhub.username))
    password: ((dockerhub.password))

- name: perm-requirements-src-capi
  type: git
  source:
    uri: git@github.com:cloudfoundry-incubator/perm-ci
    private_key: ((github.private_key))
    branch: master
    paths:
    - images/perm-requirements/capi/*

- name: perm-requirements-image-capi
  type: docker-image
  source:
    repository: cfperm/requirements
    tag: capi
    username: ((dockerhub.username))
    password: ((dockerhub.password))

- name: perm-requirements-src-mysql
  type: git
  source:
    uri: git@github.com:cloudfoundry-incubator/perm-ci
    private_key: ((github.private_key))
    branch: master
    paths:
    - images/perm-requirements/mysql/*

- name: perm-requirements-image-mysql
  type: docker-image
  source:
    repository: cfperm/requirements
    tag: mysql
    username: ((dockerhub.username))
    password: ((dockerhub.password))

- name: perm-requirements-src-percona
  type: git
  source:
    uri: git@github.com:cloudfoundry-incubator/perm-ci
    private_key: ((github.private_key))
    branch: master
    paths:
    - images/perm-requirements/percona/*

- name: perm-requirements-image-percona
  type: docker-image
  source:
    repository: cfperm/requirements
    tag: percona
    username: ((dockerhub.username))
    password: ((dockerhub.password))

- name: perm-requirements-src-mariadb
  type: git
  source:
    uri: git@github.com:cloudfoundry-incubator/perm-ci
    private_key: ((github.private_key))
    branch: master
    paths:
    - images/perm-requirements/mariadb/*

- name: perm-requirements-image-mariadb
  type: docker-image
  source:
    repository: cfperm/requirements
    tag: mariadb
    username: ((dockerhub.username))
    password: ((dockerhub.password))

- name: perm-alpha
  type: gcs
  source:
    bucket: perm-binaries
    regexp: perm-(\d+\.\d+\.\d+-alpha\.\d+).tgz
    json_key: ((gcp.json_key))

- name: perm-beta
  type: gcs
  source:
    bucket: perm-binaries
    regexp: perm-(\d+\.\d+\.\d+-beta\.\d+).tgz
    json_key: ((gcp.json_key))

- name: perm-image-alpha
  type: docker-image
  source:
    repository: cfperm/perm
    tag: alpha
    username: ((dockerhub.username))
    password: ((dockerhub.password))

- name: perm-image-beta
  type: docker-image
  source:
    repository: cfperm/perm
    tag: beta
    username: ((dockerhub.username))
    password: ((dockerhub.password))

- name: perm-image-src
  type: git
  source:
    uri: git@github.com:cloudfoundry-incubator/perm-ci
    private_key: ((github.private_key))
    branch: master
    paths:
    - images/perm/*

- name: gometalinter-image-src
  type: git
  source:
    uri: git@github.com:cloudfoundry-incubator/perm-ci
    private_key: ((github.private_key))
    branch: master
    paths:
    - images/gometalinter/*

- name: gometalinter-image
  type: docker-image
  source:
    repository: cfperm/gometalinter
    username: ((dockerhub.username))
    password: ((dockerhub.password))

jobs:
- name: build-perm-image-alpha
  plan:
  - aggregate:
    - get: perm-bin-dir
      resource: perm-alpha
      trigger: true
    - get: perm-image-src
    - get: perm-ci
  - task: create-perm-image-workspace
    file: perm-ci/tasks/create-perm-image-workspace/task.yml
  - put: perm-image-alpha
    params:
      build: perm-image-workspace

- name: build-perm-image-beta
  plan:
  - aggregate:
    - get: perm-bin-dir
      resource: perm-beta
      trigger: true
    - get: perm-image-src
    - get: perm-ci
  - task: create-perm-image-workspace
    file: perm-ci/tasks/create-perm-image-workspace/task.yml
  - put: perm-image-beta
    params:
      build: perm-image-workspace

- name: build-perm-image-base
  plan:
  - aggregate:
    - get: golang-image
      trigger: true
    - get: perm-requirements-src-base
      trigger: true
  - put: perm-requirements-image-base
    params:
      build: perm-requirements-src-base/images/perm-requirements/base

- name: build-perm-image-capi
  plan:
  - aggregate:
    - get: perm-requirements-src-capi
      trigger: true
  - put: perm-requirements-image-capi
    params:
      build: perm-requirements-src-capi/images/perm-requirements/capi

- name: build-perm-mysql-image
  plan:
  - aggregate:
    - get: perm-requirements-src-base
      passed:
      - build-perm-image-base
      trigger: true
    - get: perm-requirements-src-mysql
      trigger: true
  - put: perm-requirements-image-mysql
    params:
      build: perm-requirements-src-mysql/images/perm-requirements/mysql

- name: build-perm-percona-image
  plan:
  - aggregate:
    - get: perm-requirements-src-base
      passed:
      - build-perm-image-base
      trigger: true
    - get: perm-requirements-src-percona
      trigger: true
  - put: perm-requirements-image-percona
    params:
      build: perm-requirements-src-percona/images/perm-requirements/percona

- name: build-perm-mariadb-image
  plan:
  - aggregate:
    - get: perm-requirements-src-base
      passed:
      - build-perm-image-base
      trigger: true
    - get: perm-requirements-src-mariadb
      trigger: true
  - put: perm-requirements-image-mariadb
    params:
      build: perm-requirements-src-mariadb/images/perm-requirements/mariadb

- name: build-gometalinter-image
  plan:
  - aggregate:
    - get: golang-image
      trigger: true
    - get: gometalinter-image-src
      trigger: true
  - put: gometalinter-image
    params:
      build: gometalinter-image-src/images/gometalinter
