resource_types:
- name: bosh-deployment
  type: docker-image
  source:
    repository: cloudfoundry/bosh-deployment-resource
- name: gcs
  type: docker-image
  source:
    repository: frodenas/gcs-resource
- name: git-branch-heads
  type: docker-image
  source:
    repository: vito/git-branch-heads-resource
- name: terraform
  type: docker-image
  source:
    repository: ljfranklin/terraform-resource

resources:
# temporary: for us to experiment with tcp route creation via route registrar
- name: routing-release-tcp
  type: git
  source:
    uri: git@github.com:n4wei/routing-release.git
    private_key: ((github.private_key))
    branch: tcp-route-registration

- name: cf-deployment-develop
  type: git
  source:
    uri: git@github.com:cloudfoundry/cf-deployment.git
    private_key: ((github.private_key))
    branch: develop

- name: morning
  type: time
  source:
    start: 03:00
    stop:  04:00
    location: America/Los_Angeles
    days: [ Monday, Tuesday, Wednesday, Thursday, Friday ]

- name: perm-version
  type: semver
  source:
    driver: gcs
    endpoint: storage.googleapis.com
    initial_version: 0.0.2
    bucket: perm-releases
    key: perm-version
    json_key: ((gcp.json_key))
- name: perm-binary
  type: gcs
  source:
    bucket: perm-binaries
    regexp: perm-(\d+\.\d+\.\d+-alpha\.\d+).tgz
    json_key: ((gcp.json_key))
- name: bosh-deployment
  type: git
  source:
    branch: master
    uri: git@github.com:cloudfoundry/bosh-deployment.git
    private_key: ((github.private_key))

- name: broken-pool-repo
  type: git
  source:
    branch: master
    uri: ((broken_pool_repo_uri))
    private_key: ((github.private_key))

- name: capi-ci
  type: git
  source:
    uri: git@github.com:cloudfoundry/capi-ci
    branch: master
    private_key: ((github.private_key))

- name: capi-release-develop
  type: s3
  source:
    bucket: capi-releases
    regexp: capi-(.*)-.*-.*.tgz

- name: cats-concourse-task
  type: git
  source:
    branch: master
    private_key: ((github.private_key))
    uri: git@github.com:cloudfoundry/cats-concourse-task.git

- name: cf-acceptance-tests
  type: git
  source:
    branch: master
    private_key: ((github.private_key))
    uri: git@github.com:cloudfoundry/cf-acceptance-tests.git

- name: cf-deploy
  type: bosh-deployment

- name: cf-deployment
  type: git
  source:
    uri: git@github.com:cloudfoundry/cf-deployment.git
    private_key: ((github.private_key))
    branch: perm-develop

- name: cloud_controller_ng
  type: git
  source:
    uri: git@github.com:cloudfoundry/cloud_controller_ng.git
    private_key: ((github.private_key))
    branch: master

- name: perm
  type: git
  source:
    uri: git@github.com:cloudfoundry-incubator/perm
    branch: master
    private_key: ((github.private_key))

- name: perm-rb
  type: git
  source:
    uri: git@github.com:cloudfoundry-incubator/perm-rb
    branch: master
    private_key: ((github.private_key))
- name: perm-ci
  type: git
  source:
    uri: git@github.com:cloudfoundry-incubator/perm-ci
    branch: master
    private_key: ((github.private_key))
- name: perm-release
  type: git
  source:
    uri: git@github.com:cloudfoundry-incubator/perm-release
    branch: master
    private_key: ((github.private_key))
- name: release-alpha
  type: gcs
  source:
    bucket: perm-alphas
    regexp: perm-release-(.*).tgz
    json_key: ((gcp.json_key))
- name: final-release
  type: gcs
  source:
    bucket: perm-releases
    regexp: perm-release-(.*).tgz
    json_key: ((gcp.json_key))
- name: terraform
  type: terraform
  source:
    storage:
      endpoint: storage.googleapis.com
      bucket: ((terraform.bucket))
      bucket_path: bosh-lite/
      access_key_id: ((gcp.access_key_id))
      secret_access_key: ((gcp.secret_access_key))
- name: tracker
  type: tracker
  source:
    token: ((tracker.api_token))
    project_id: ((tracker.project_id))

jobs:
- name: rebase-cfd
  plan:
  - aggregate:
    - get: perm-ci
    - get: cf-deployment-develop
      trigger: true
    - get: cf-deployment-perm
      resource: cf-deployment
  - task: rebase-cf-deployment
    file: perm-ci/tasks/rebase-cfd/task.yml
  - put: cf-deployment
    params:
      repository: rebased-cf-deployment-perm
      rebase: true

- name: test-server
  plan:
  - aggregate:
    - get: perm
      trigger: true
    - get: perm-ci
  - aggregate:
    - task: test-server-mysql
      file: perm-ci/tasks/test-server/task-mysql.yml
    - task: test-server-mariadb
      file: perm-ci/tasks/test-server/task-mariadb.yml
    - task: test-server-percona
      file: perm-ci/tasks/test-server/task-percona.yml

- name: bump-submodule
  plan:
  - aggregate:
    - get: perm
      passed:
      - test-server
      trigger: true
    - get: perm-ci
    - get: perm-release
  - task: bump-submodule
    file: perm-ci/tasks/bump-submodule/task.yml
    input_mapping:
      parent-repo: perm-release
      submodule-repo: perm
    output_mapping:
      updated-parent-repo: updated-perm-release
    params:
      SUBMODULE_PATH: src/code.cloudfoundry.org/perm
      SUBMODULE_NAME: perm
  - put: perm-release
    params:
      repository: updated-perm-release/parent-repo
      rebase: true

- name: bump-alpha
  plan:
  - aggregate:
    - get: perm
      passed:
      - bump-submodule
    - get: perm-version
      params:
        pre: alpha
  # Get perm-release after perm to avoid race conditions where the perm repo
  # gets pushed before perm-release during the `bump-submodule` job.
  - get: perm-release
    trigger: true
  - put: perm-version
    params:
      file: perm-version/version

- name: test-migrator
  plan:
  - aggregate:
    - get: perm
      passed:
      - bump-alpha
    - get: perm-ci
    - get: perm-release
      passed:
      - bump-alpha
    - get: perm-version
      passed:
      - bump-alpha
      trigger: true
  - aggregate:
    - task: test-migrator
      file: perm-ci/tasks/test-migrator/task.yml

- name: create-alpha
  plan:
  - aggregate:
    - get: perm
      passed:
      - test-migrator
    - get: perm-ci
    - get: perm-release
      passed:
      - test-migrator
    - get: perm-version
      trigger: true
      passed:
      - test-migrator
  - aggregate:
    - task: build-perm-binary
      file: perm-ci/tasks/build-binary/task.yml
      input_mapping:
        version: perm-version
        release: perm-release
      output_mapping:
        bin-dir: perm-bin-dir
      params:
        PACKAGE_PATH: code.cloudfoundry.org/perm/cmd/perm
        BINARY_NAME: perm
    - task: create-release
      file: perm-ci/tasks/create-release/task.yml
      input_mapping:
        version: perm-version
        release: perm-release
      params:
        RELEASE_NAME: perm
        TARBALL_NAME: perm-release
  - put: release-alpha
    params:
      file: release-output/perm-*.tgz
  - put: perm-binary
    params:
      file: perm-bin-dir/perm-*.tgz

- name: test-ruby-client
  plan:
  - aggregate:
    - get: perm
      passed:
      - create-alpha
    - get: perm-bin-dir
      resource: perm-binary
      passed:
      - create-alpha
      trigger: true
    - get: perm-ci
    - get: perm-rb
      trigger: true
    - get: perm-release
      passed:
      - create-alpha
    - get: release-alpha
      passed:
      - create-alpha
  - task: test-ruby-client
    file: perm-ci/tasks/test-ruby-client/task.yml

- name: publish-ruby-client
  plan:
  - aggregate:
    - get: perm-ci
    - get: perm-rb
      passed:
      - test-ruby-client
  - task: publish-ruby-client
    file: perm-ci/tasks/publish-ruby-client/task.yml
    params:
      RUBYGEMS_API_KEY: ((rubygems.api_key))

- name: test-capi
  plan:
  - aggregate:
    - get: capi-ci
    - get: cloud_controller_ng
      trigger: true
    - get: perm-bin-dir
      resource: perm-binary
      passed:
      - create-alpha
      trigger: true
    - get: perm-ci
  - task: test-capi
    file: perm-ci/tasks/test-capi/task.yml

- name: deploy-cf
  plan:
  - aggregate:
    - get: morning
      trigger: true
    - get: bosh-deployment
    - get: broken-pool-repo
    - get: capi-ci
    - get: capi-release
      resource: capi-release-develop
      trigger: true
    - get: cf-deployment
    - get: perm
      passed:
      - create-alpha
    - get: perm-ci
    - get: perm-release
      passed:
      - create-alpha
    - get: release-alpha
      passed:
      - create-alpha
    - get: perm-version
      trigger: true
      passed:
      - create-alpha
    - get: routing-release-tcp
  - do: &deploy-cf
    - put: terraform
      params:
        delete_on_failure: true
        generate_random_name: true
        terraform_source: capi-ci/terraform/bosh-lite
        vars: &test_cf_terraform_vars
          dns_json_key: ((gcp.json_key))
          dns_project_id: ((gcp.project_id))
          dns_zone_name: ((terraform.dns_zone_name))
          json_key: ((gcp.json_key))
          project_id: ((gcp.project_id))
          region: ((gcp.region))
          system_domain_suffix: ((terraform.system_domain_suffix))
          zone: ((gcp.zone))
    - do:
      - task: create-bosh-lite
        file: capi-ci/ci/bosh-lite/create-bosh-lite.yml
        params:
          GCP_JSON_KEY: ((gcp.json_key))
        on_failure:
          put: terraform
          get_params:
            action: destroy
          params:
            action: destroy
            env_name_file: terraform/name
            terraform_source: capi-ci/terraform/bosh-lite
            vars: *test_cf_terraform_vars
      - do:
        - task: create-env-vars-file
          file: capi-ci/ci/bosh-lite/create-env-vars-file.yml
        - task: upload-cf-assets
          file: capi-ci/ci/bosh-lite/upload-cf-assets.yml
        - task: update-cloud-config
          file: perm-ci/tasks/update-cloud-config/task.yml
        - task: write-bosh-target-file
          file: capi-ci/ci/bosh-lite/write-bosh-target-file.yml
        - task: upload-to-gcs
          file: capi-ci/ci/gcs/upload-to-gcs.yml
          input_mapping:
            environment: terraform
            source-directory: director-state
          params: &gcp-environment-params
            GCP_JSON_KEY: ((gcp.json_key))
            GCP_BUCKET: ((terraform.bucket))
            GCP_PATH: director-state
            USE_ENV_NAMED_SUBDIR: true
        - task: create-routing-release
          file: perm-ci/tasks/create-release/task.yml
          input_mapping:
            version: perm-version
            release: routing-release-tcp
          params:
            RELEASE_NAME: routing
            TARBALL_NAME: routing-release
        on_failure: &cf-deploy-failure
          do:
          - task: delete-bosh-lite
            file: capi-ci/ci/bosh-lite/delete-bosh-lite.yml
          - put: terraform
            params:
              action: destroy
              env_name_file: terraform/name
              terraform_source: capi-ci/terraform/bosh-lite
              vars: *test_cf_terraform_vars
            get_params:
              action: destroy
      - put: cf-deploy
        params:
          source_file: bosh-target/target.yml
          manifest: cf-deployment/cf-deployment.yml
          releases:
          - release-alpha/*.tgz
          - capi-release/*.tgz
          - release-output/routing-release*.tgz
          vars_files:
          - bosh-target/vars.yml
          ops_files:
          - cf-deployment/operations/experimental/use-xenial-stemcell.yml
          - cf-deployment/operations/experimental/enable-bpm.yml
          - cf-deployment/operations/experimental/use-compiled-releases-xenial-stemcell.yml
          - cf-deployment/operations/experimental/disable-consul.yml
          - cf-deployment/operations/bosh-lite.yml
          - cf-deployment/operations/experimental/disable-consul-bosh-lite.yml
          - cf-deployment/operations/experimental/perm-service.yml
          - cf-deployment/operations/experimental/perm-service-with-tcp-routing.yml
          - cf-deployment/operations/experimental/use-pxc.yml
          - cf-deployment/operations/experimental/perm-service-with-pxc-release.yml
          - perm-ci/cf-deployment-operations/make-perm-ha.yml
          - perm-ci/cf-deployment-operations/add-perm-monitor.yml
          - perm-ci/cf-deployment-operations/use-latest-routing-release.yml
          - capi-ci/cf-deployment-operations/use-latest-capi.yml
        on_failure:
          do: &pend-broken-environment
          - task: pend-broken-environment
            file: perm-ci/tasks/pend-broken-environment/task.yml
            params:
              POOL_NAME: bosh-lites-broken
            input_mapping:
              environment-name-dir: terraform
              pool-repo: broken-pool-repo
          - put: broken-pool-repo
            params:
              repository: updated-pool-repo-dir/repo
              rebase: true
          on_failure: *cf-deploy-failure

- name: run-errands
  plan:
  - aggregate:
    - get: broken-pool-repo
    - get: capi-ci
    - get: capi-release
      resource: capi-release-develop
      passed:
      - deploy-cf
    - get: perm
      passed:
      - deploy-cf
    - get: perm-ci
    - get: perm-release
      trigger: true
      passed:
      - deploy-cf
    - get: release-alpha
      passed:
      - deploy-cf
    - get: terraform
      passed:
      - deploy-cf
      trigger: true
    - get: perm-version
      passed:
      - deploy-cf
  - do: &run-errands
    - task: download-from-gcs
      file: capi-ci/ci/gcs/download-from-gcs.yml
      input_mapping:
        environment: terraform
      output_mapping:
        destination-directory: environment-directory
      params: *gcp-environment-params
    - task: run-cc-to-perm-migrator-errand
      file: perm-ci/tasks/run-bosh-errand/task.yml
      params:
        BOSH_DEPLOYMENT: cf
        BOSH_ERRAND_NAME: cc-to-perm-migrator
      on_failure:
        do: *pend-broken-environment

- name: test-cf
  plan:
  - aggregate:
    - get: broken-pool-repo
    - get: capi-ci
    - get: capi-release
      resource: capi-release-develop
      trigger: true
      passed:
      - run-errands
    - get: cats-concourse-task
    - get: cf-acceptance-tests
    - get: perm
      passed:
      - run-errands
    - get: perm-ci
    - get: perm-release
      passed:
      - run-errands
    - get: release-alpha
      passed:
      - run-errands
    - get: terraform
      passed:
      - run-errands
      trigger: true
    - get: perm-version
      passed:
      - run-errands
      trigger: true
  - do: &test-cf
    - task: download-from-gcs
      file: capi-ci/ci/gcs/download-from-gcs.yml
      input_mapping:
        environment: terraform
      output_mapping:
        destination-directory: environment-directory
      params: *gcp-environment-params
    - task: write-cats-config
      file: perm-ci/tasks/write-cats-config/task.yml
      output_mapping:
        cats-config-dir: integration-config
    - task: run-cats
      file: cats-concourse-task/task.yml
      params:
        NODES: 4
      ensure:
        do: *pend-broken-environment

- name: shipit
  plan:
  - aggregate:
    - get: perm-ci
    - get: perm-version
      passed:
      - test-cf
      params:
        bump: final
    - get: perm-release
      passed:
      - test-cf
    - get: release-alpha
      passed:
      - test-cf
  - task: finalize-release
    file: perm-ci/tasks/finalize-release/task.yml
    input_mapping:
      release-repo: perm-release
      release-tarball: release-alpha
      version: perm-version
    params:
      BOSH_PRIVATE_CONFIG: ((private_yml))
  - put: final-release
    params:
      file: final-release-tarball/perm-release-*.tgz
  - put: perm-version
    params:
      bump: patch
  - put: perm-release
    params:
      repository: final-release-repo
      merge: true

- name: deliver-stories
  plan:
  - aggregate:
    - get: perm
      passed:
      - test-cf
    - get: perm-ci
    - get: perm-rb
      passed:
      - test-ruby-client
    - get: perm-release
      passed:
      - test-cf
    - get: release-alpha
      passed:
      - test-cf
    - get: perm-version
      trigger: true
      passed:
      - test-cf
  - put: tracker
    params:
      repos:
      - perm
      - perm-rb
      - perm-release
